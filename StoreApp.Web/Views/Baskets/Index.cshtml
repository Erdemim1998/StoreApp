@model List<BasketItem>

@{
    ViewData["Title"] = "Sepetim";
}

@section Header {
    @await Html.PartialAsync("_Header", null, new ViewDataDictionary(ViewData) { { "Authenticated", ViewBag.IsAuthenticated }, { "Admin", ViewBag.IsAdmin }, { "User", ViewBag.UserId }, { "Language", ViewBag.Lang } })
}

@if(Model.Count > 0)
{
    <div class="container mx-3">
        <h1 class="h4 text-dark fw-bold">Sepetim <span class="text-light fw-normal">(@Model.Count ürün)</span></h1>
        <a class="clearProducts" role="button" data-toggle="modal" data-target="#deleteModal"><span style="color:#FF6000;">Ürünleri sil</span> <img src="/img/icons/garbage.png" width="20" /></a>
    </div>

    <div class="container mx-3">
        @{
            float totalPrice = 0;

            foreach (BasketItem basket in Model)
            {
                Product? product = await DataControl.GetProductByUrl(basket.Url!);

                if (product != null)
                {
                    ProductImage image = (await DataControl.GetProductImages(product.Id)).First();
                    totalPrice += basket.Count * product.Price ?? 0;

                    <ul class="list-group bg-white w-75 mb-3">
                        <li class="list-group-item">
                            <div class="row">
                                <div class="col-1" style="position:relative;">
                                    <input type="checkbox" class="form-check-input" id="chkBasket_@product.Id" data-basketid="@product.Id" style="position:absolute; left:38%; top:40%;" checked />
                                </div>
                                <div class="col-2">
                                    <img src="@image.Url" width="100%" />
                                </div>

                                <div class="col-9">
                                    <p class="fw-bold text-dark h4 mb-2">@product.Name</p>
                                    <p class="fw-bold mb-2 lblBrandName" style="color:#FF6000">@product.Brand.Name</p>
                                    <p id="price-@product.Id" class="fw-bold text-dark mb-2">@(basket.Count * product.Price) TL</p>
                                    <div>
                                        <button class="countButtons decrease-button" data-productid="@basket.Id" data-basketid="@product.Id" data-price="@product.Price">-</button>
                                        <button id="count-text-button"><span id="count_@product.Id">@basket.Count</span> <span class="lblCount">Adet</span></button>
                                        <button class="countButtons increase-button" data-basketid="@product.Id" data-name="@product.Name" data-price="@product.Price" data-url="@product.Url" data-brandid="@product.BrandId">+</button>
                                        <form asp-controller="Baskets" asp-action="Index" asp-route-lang="@ViewBag.Lang" method="post" class="d-inline-block">
                                            <input type="hidden" id="productName" name="productName" value="@product.Name" />
                                            <button type="submit" class="btn p-2">
                                                <img src="/img/icons/garbage.png" />
                                            </button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </li>
                    </ul>
                }
            }

            <div class="card w-20 position-absolute border-1" style="left:75%;">
                <div class="card-header" style="color:#FF6000">SEÇİLEN ÜRÜNLER (<span id="selectedProductCount">@Model.Count</span>)</div>
                <div class="card-body">
                    <p id="total-price" class="h4 fw-bold">@totalPrice.ToString("0.00") TL</p>
                    <a class="btn mainPageButtons fw-bold w-100" style="height:50px;" asp-controller="Orders" asp-action="Index" asp-route-lang="@ViewBag.Lang">Alışverişi tamamla</a>
                </div>
            </div>
        }
    </div>
}

else
{
    <div class="container d-flex flex-column align-items-center justify-content-center bg-white py-5">
        <div class="text-center">
            <i class="fas fa-shopping-cart" style="font-size: 50px; color: #FF6000;"></i>
            <h2 class="mt-3" id="emptyBasket">Sepetin şu an boş</h2>
            <p class="lead">Sepetini Erdemburada'nın fırsatlarla dolu dünyasından doldurmak için ürünleri incelemeye başlayabilirsin.</p>
        </div>
    </div>
}


<!-- Modal -->
<div class="modal fade show" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" style="font-weight:600; font-size:1.4rem; line-height:4rem; text-align:center; color: #212121;">Silme işlemine devam etmek ister misin?</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-footer">
                <form asp-controller="Baskets" asp-action="Index" asp-route-lang="@ViewBag.Lang" method="post">
                    <button id="deleteAll" type="submit" class="btn" data-bs-dismiss="modal">Tümünü Sil</button>
                </form>
                
                <button id="cancelBtn" type="button" class="nav-link" style="background-color:white; color:#FF6000;">Vazgeç</button>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            let searchParams = new URLSearchParams(window.location.search);
            let lang = searchParams.get('lang');

            if (lang == "en") {
                $("#dropdownMenuButton > .flag-icon").removeClass("flag-icon-tr");
                $("#dropdownMenuButton > .flag-icon").addClass("flag-icon-en");
                $(".lang-menu > .dropdown-item > img").attr("src", "https://cdnjs.cloudflare.com/ajax/libs/flag-icon-css/3.4.6/flags/4x3/tr.svg");
                $(".lang-menu > .dropdown-item").data("lang", "tr");
                $("#search-text").attr("placeholder", "Search product, category or brand...");
                $("#search-empty").html("You should write <strong>least 2 characters</strong> to start searching.");
                $("#search-button").text("Search");
                $("#adminPanel").text("Admin Panel");
                $("#login").text("Login");
                $("#register").text("Register");
                $("#greeting").text("Hello,");
                $("#emptyBasket").text("Your cart is currently empty");
                $(".lead").text("You can start to examine the products to fill your cart from Erdemburada's world full of opportunities.");
                $(".container > .h4").text($(".container > .h4").text().replace("Sepetim", "My Basket"));
                $(".container > .h4").text($(".container > .h4").text().replace("ürün", "product"));
                $(".clearProducts").html($(".clearProducts").text().replace("Ürünleri sil", '<span style="color: #FF6000;">Delete Products</span> <img src="/img/icons/garbage.png" width="20" />'));
                $(".card-header").text($(".card-header").text().replace("SEÇİLEN ÜRÜNLER", "SELECTED PRODUCTS"));
                $(".card-body > .btn").text("Complete shopping");
                $(".lblCount").text("Pcs");
                $(".modal-title").text("Do you want to continue deleting?");
                $("#deleteAll").text("Delete All");
                $("#cancelBtn").text("Cancel"); 
                $("#page-title").text("My Basket");

                $.ajax({
                    type: 'GET',
                    url: "http://localhost:5292/api/StoreApp/GetBaskets",
                    dataType: 'Json',
                    success: function (baskets) {
                        if (baskets.length > 0) {
                            for (let i = 0; i < baskets.length; i++) {
                                $.ajax({
                                    type: 'GET',
                                    url: "http://localhost:5292/api/StoreApp/GetProductByUrl/" + baskets[i].url,
                                    dataType: 'Json',
                                    success: function (product) {
                                        if (product != null) {
                                            $(".list-group-item > .row > .col-9 > .h4").text(product.ml2Name == null ? product.name : product.ml2Name);
                                            $(".lblBrandName").text(product.brand.ml2Name == null ? product.brand.name : product.brand.ml2Name);
                                        }
                                    }
                                });
                            }
                        }
                    }
                });

                $.ajax({
                    type: 'GET',
                    url: "http://localhost:5292/api/StoreApp/GetCategories",
                    dataType: 'Json',
                    success: function (categories) {
                        if (categories.length > 0) {
                            for (let i = 0; i < categories.length; i++) {
                                let $target = $("#menuButton_" + categories[i].id);
                                $target.text(categories[i].ml2Name == null ? categories[i].name : categories[i].ml2Name);
                            }
                        }
                    }
                });

                $.ajax({
                    type: 'GET',
                    url: "http://localhost:5292/api/StoreApp/GetSubCategories",
                    dataType: 'Json',
                    success: function (subcategories) {
                        if (subcategories.length > 0) {
                            for (let i = 0; i < subcategories.length; i++) {
                                let $target = $("#subMenuButton_" + subcategories[i].id);
                                $target.text(subcategories[i].ml2Name == null ? subcategories[i].name : subcategories[i].ml2Name);
                            }
                        }
                    }
                });
            }

            else {
                $("#dropdownMenuButton > .flag-icon").removeClass("flag-icon-en");
                $("#dropdownMenuButton > .flag-icon").addClass("flag-icon-tr");
                $(".lang-menu > .dropdown-item > img").attr("src", "https://cdnjs.cloudflare.com/ajax/libs/flag-icon-css/3.4.6/flags/4x3/gb.svg");
                $(".lang-menu > .dropdown-item").data("lang", "en");
                $("#search-text").attr("placeholder", "Ürün, kategori veya marka ara...");
                $("#search-empty").html("Aramaya başlamak için <strong>en az 2 karakter</strong> yazmalısınız.");
                $("#search-button").text("ARA");
                $("#adminPanel").text("Yönetici Paneli");
                $("#login").text("Giriş Yap");
                $("#register").text("Kayıt Ol");
                $("#greeting").text("Merhaba,");
                $("#emptyBasket").text("Sepetin şu an boş");
                $(".lead").text("Sepetini Erdemburada'nın fırsatlarla dolu dünyasından doldurmak için ürünleri incelemeye başlayabilirsin.");
                $(".container > .h4").text($(".container > .h4").text().replace("My Basket", "Sepetim"));
                $(".container > .h4").text($(".container > .h4").text().replace("product", "ürün"));
                $(".card-header").text($(".card-header").text().replace("SELECTED PRODUCTS", "SEÇİLEN ÜRÜNLER"));
                $(".card-body > .btn").text("Alışverişi tamamla");
                $(".lblCount").text("Adet");
                $(".modal-title").text("Silme işlemine devam etmek ister misin?");
                $("#deleteAll").text("Tümünü Sil");
                $("#cancelBtn").text("İptal");
                $("#page-title").text("Sepetim");

                $.ajax({
                    type: 'GET',
                    url: "http://localhost:5292/api/StoreApp/GetBaskets",
                    dataType: 'Json',
                    success: function (baskets) {
                        if (baskets.length > 0) {
                            for (let i = 0; i < baskets.length; i++) {
                                $.ajax({
                                    type: 'GET',
                                    url: "http://localhost:5292/api/StoreApp/GetProductByUrl/" + baskets[i].url,
                                    dataType: 'Json',
                                    success: function (product) {
                                        if (product != null) {
                                            $(".list-group-item > .row > .col-9 > .h4").text(product.ml1Name == null ? product.name : product.ml1Name);
                                            $(".lblBrandName").text(product.brand.ml1Name == null ? product.brand.name : product.brand.ml1Name);
                                        }
                                    }
                                });
                            }
                        }
                    }
                });

                $.ajax({
                    type: 'GET',
                    url: "http://localhost:5292/api/StoreApp/GetCategories",
                    dataType: 'Json',
                    success: function (categories) {
                        if (categories.length > 0) {
                            for (let i = 0; i < categories.length; i++) {
                                let $target = $("#menuButton_" + categories[i].id);
                                $target.text(categories[i].ml1Name == null ? categories[i].name : categories[i].ml1Name);
                            }
                        }
                    }
                });

                $.ajax({
                    type: 'GET',
                    url: "http://localhost:5292/api/StoreApp/GetSubCategories",
                    dataType: 'Json',
                    success: function (subcategories) {
                        if (subcategories.length > 0) {
                            for (let i = 0; i < subcategories.length; i++) {
                                let $target = $("#subMenuButton_" + subcategories[i].id);
                                $target.text(subcategories[i].ml1Name == null ? subcategories[i].name : subcategories[i].ml1Name);
                            }
                        }
                    }
                });
            }
        });

        $(document).on("click", ".decrease-button", function () {
            let price = $(this).data("price");
            var basketid = $(this).data("basketid");
            var productid = $(this).data("productid");
            let count = parseInt($("#count_" + basketid).text()) - 1;

            if (count > 0) {
                $("#count_" + basketid).text(count);
                $("#price-" + basketid).text(parseFloat(count * price).toFixed(2) + " TL");
                $("#total-price").text((parseFloat($("#total-price").text()) - price).toFixed(2) + " TL");
            }

            $.ajax({
                type:'POST',
                url:'@Url.Action("DeleteBasket")',
                dataType:'Json',
                data: {
                    ProductId: productid
                },
                success: function () {
                    console.log("Ürün sayısı 1 azaltıldı.");
                }
            });
        });

        $(document).on("click", ".increase-button", function () {
            var name = $(this).data("name");
            let price = $(this).data("price");
            var url = $(this).data("url");
            let brandid = $(this).data("brandid");
            var basketid = $(this).data("basketid");
            let count = parseInt($("#count_" + basketid).text()) + 1;
            $("#count_" + basketid).text(count);
            $("#price-" + basketid).text(parseFloat(count * price).toFixed(2) + " TL");
            $("#total-price").text((parseFloat($("#total-price").text()) + price).toFixed(2) + " TL");

            $.ajax({
                type: 'POST',
                url: '@Url.Action("CreateBasket")',
                dataType: 'Json',
                data: {
                    Name: name,
                    Price: price,
                    Url: url,
                    BrandId: brandid
                },
                success: function () {
                    console.log("Ürün sayısı 1 arttırıldı.");
                }
            });
        });

        $(document).on("click", ".form-check-input", function () {
            let basketid = $(this).data("basketid");
            let price = parseFloat($("#price-" + basketid).text());

            if ($("#chkBasket_" + basketid).is(':checked')) {
                $("#total-price").text((parseFloat($("#total-price").text()) + price).toFixed(2) + " TL");
                $("#selectedProductCount").text(parseInt($("#selectedProductCount").text()) + 1);
            }

            else{
                $("#total-price").text((parseFloat($("#total-price").text()) - price).toFixed(2) + " TL");
                $("#selectedProductCount").text(parseInt($("#selectedProductCount").text()) - 1);
            }
        });

        $(document).on("click", ".clearProducts", function () {
            $("#deleteModal").show();
        });

        $(document).on("click", ".btn-close", function () {
            $("#deleteModal").hide();
        });

        $(document).on("click", "#cancelBtn", function () {
            $("#deleteModal").hide();
        });
    </script>
}